import os
import numpy as np
from PIL import Image

def bytes_to_image(byte_array, width=256):
    # Determine the size of the image
    byte_length = len(byte_array)
    height = byte_length // width + (byte_length % width > 0)
    
    # Create a 2D numpy array and fill it with the byte content
    image_array = np.zeros((height, width), dtype=np.uint8)
    byte_array = np.frombuffer(byte_array, dtype=np.uint8)
    image_array[:byte_array.shape[0] // width, :width] = byte_array[:width * (byte_array.shape[0] // width)].reshape(-1, width)
    if byte_array.shape[0] % width:
        image_array[-1, :byte_array.shape[0] % width] = byte_array[width * (byte_array.shape[0] // width):]
    
    # Convert the numpy array to a PIL Image
    image = Image.fromarray(image_array)
    return image

def convert_pe_to_images(pe_files_directory, output_directory, width=256):
    if not os.path.exists(output_directory):
        os.makedirs(output_directory)
    
    for file_name in os.listdir(pe_files_directory):
        file_path = os.path.join(pe_files_directory, file_name)
        with open(file_path, 'rb') as f:
            byte_array = f.read()
        
        image = bytes_to_image(byte_array, width=width)
        image.save(os.path.join(output_directory, os.path.splitext(file_name)[0] + '.png'))

# Example usage
pe_files_directory = '../Datasets/Malware/class'
output_directory = '../Datasets/MalImages'
convert_pe_to_images(pe_files_directory, output_directory)
